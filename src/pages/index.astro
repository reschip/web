---
// index.astro - Página principal del portfolio.
import Layout from '../layouts/Layout.astro';
---

<Layout title="Mi Portfolio">
  <canvas id="game-of-life-canvas"></canvas>

  <section class="min-h-screen flex flex-col justify-center items-center text-center text-[20px] gap-[40px]">
    <h1 class="bg-[#f5e3c8] rounded-md px-[25px] py-[2px] font-extrabold text-[50px]">
      Andres Cruz Chipol
    </h1>
    <p class="text-[25px]">
      Computer scientist focused on Artificial Intelligence, where theory and practice become one. Research enthusiast and supporter of open source.
    </p>
  </section>

  <section class="mb-5">
    <h2 class="section-title">About</h2>
    <p>I was born in Mexico, in a developing city where the river whispers stories to the sun and oil sleeps beneath cacao trees that dream of rain.</p>
    <p>I traveled where the sea murmurs winds from the Isthmus and ships dance to the rhythm of the sandunga.</p>
    <p>I learned where domes touch the sky amid the scents of talavera and mole, and time walks through alleyways filled with history.</p>
  </section>

  <section class="bg-[#f9f8f596]">
    <h2 class="section-title">Work Experience</h2>
    <div class="experience-item">
      <div class="date-column">2024 - Now</div>
      <div class="content-column">
        <h3 class="job-title">Artificial Intelligence Analyst</h3>
        <div class="company">Layer7</div>
      </div>
    </div>

    <div class="experience-item">
      <div class="date-column">nov 22 - abr 23</div>
      <div class="content-column">
        <h3 class="job-title">Data Scientist Intership</h3>
        <div class="company">Hospital Angeles</div>
      </div>
    </div>
    
    <div class="experience-item">
      <div class="date-column">ago. 21 - oct. 21</div>
      <div class="content-column">
        <h3 class="job-title">Research Stay - Machine Learning</h3>
        <div class="company">BUAP - Benemérita Universidad Autónoma de Puebla</div>
      </div>
    </div>

    <div class="experience-item">
      <div class="date-column">jun. 21 - ago. 21</div>
      <div class="content-column">
        <h3 class="job-title">Summer Internship – Data Science</h3>
        <div class="company">CIMAT - Centro de Investigación en Matemáticas, A.C.</div>
      </div>
    </div>
  </section>

  <section>
    <h2 class="section-title">Stack</h2>
    <p>Python, SQL, C++, Javascript, Jupyter, VSCode, Docker, Postgrest, Mysql, Fastapi, MLflow, Langgraph, Langchain, Git, Github, Bitbucket, Numpy, Pandas, Matplotlib, Seaborn, Scikit-Learn, Tensorflow, Keras, Pytorch.</p>
  </section>
  
  <section>
    <h2 class="section-title">Course / Certifications</h2>
    <div class="flex flex-col gap-4">
      <div class="bg-[#f5e3c8] p-4 rounded-md">
        <h3 class="text-ml font-semibold mb-2">Data Engineering Professional Certificate</h3>
        <p class="text-gray-600 mb-2">DeepLearning.AI · Expedición: mar. 2025</p>
        <p class="text-sm text-gray-500">ID: 1T31Y80LUUQV</p>
      </div>

      <div class="bg-[#f5e3c8] p-4 rounded-md">
        <h3 class="text-ml font-semibold mb-2">Introduction to LangGraph</h3>
        <p class="text-gray-600 mb-2">LangChain · Expedición: mar. 2025</p>
        <p class="text-sm text-gray-500">ID: kkg359aynw</p>
      </div>

      <div class="bg-[#f5e3c8] p-4 rounded-md">
        <h3 class="text-ml font-semibold mb-2">Google Cloud Computing Foundations</h3>
        <p class="text-gray-600">Google · Expedición: mar. 2024</p>
      </div>

      <div class="bg-[#f5e3c8] p-4 rounded-md" >
        <h3 class="text-ml font-semibold mb-2">Quantitative Analyst with R Track</h3>
        <p class="text-gray-600">DataCamp · Expedición: jul. 2021</p>
      </div>

      <div class="bg-[#f5e3c8] p-4 rounded-md">
        <h3 class="text-ml font-semibold mb-2">AZ-900: Microsoft Azure Fundamentals</h3>
        <p class="text-gray-600 mb-2">Microsoft · Expedición: jun. 2021</p>
        <p class="text-sm text-gray-500">ID: 90029376</p>
      </div>
    </div>
  </section>
</Layout>

<style is:global>
  /* === Reseteo y Estilos Base === */
  html, body {
    margin: 0;
    padding: 0;
    width: 100%;
    height: 100%;
    font-family: Arial, sans-serif;
    color: #0f1a20;
  }

  img {
    max-width: 100%;
    height: auto;
  }

  /* === Animación de Fondo (Canvas) === */
  #game-of-life-canvas {
    position: fixed;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    z-index: -1; /* Se posiciona detrás de todo el contenido. */
    opacity: 0.4;
    filter: blur(0.5px);
  }

  /* === Estilos de Contenido General === */
  .content {
    position: relative;
    z-index: 1; /* Se asegura que el contenido esté sobre el canvas. */
    color: #2D2D2D;
    padding: 30px;
    max-width: 800px;
    margin: 40px auto;
    background-color: rgba(255, 255, 255, 0.9);
    border-radius: 15px;
    box-shadow: 0 8px 32px rgba(0, 0, 0, 0.1);
    backdrop-filter: blur(10px);
  }

  .section-title {
    font-size: 35px;
    font-weight: 900;
    margin-bottom: 0px;
    margin-top: 30px;
    color: #5bc0be;
  }

  /* === Sección de Experiencia === */
  .experience-item {
    display: flex;
    gap: 40px;
    margin-bottom: 20px;
    padding-bottom: 20px;
  }

  .experience-item:last-child {
    border-bottom: none;
    margin-bottom: 0;
  }

  .date-column {
    flex-shrink: 0;
    width: 120px;
    font-size: 14px;
  }

  .content-column {
    flex: 1;
  }

  .job-title {
    font-size: 20px;
    font-weight: 600;
    margin-bottom: -5px;
  }

  .company {
    color: #2274a5;
    font-size: 14px;
    font-weight: 400;
  }

  .description {
    color: #000000;
    font-size: 14px;
    margin-bottom: 20px;
    line-height: 1.6;
  }
</style>

<script>
  document.addEventListener('DOMContentLoaded', function() {
    const canvas = document.getElementById('game-of-life-canvas');
    if (!canvas) return;
    const ctx = canvas.getContext('2d');
    
    // --- Configuración del "Juego de la Vida" ---
    let cellSize = 12;
    let speed = 800; // Intervalo de actualización más lento para no distraer.
    const specialColors = ['#8B93FF', '#40E0A4', '#FF8B8B']; // Colores sutiles para células especiales.
    
    let grid;
    let cellColors;
    let columns;
    let rows;

    // Ajusta el canvas a las dimensiones de la ventana y reinicia la simulación.
    function resizeCanvas() {
      canvas.width = window.innerWidth;
      canvas.height = window.innerHeight;
      initGame();
    }
    
    // Inicializa la matriz del juego.
    function initGame() {
      columns = Math.ceil(canvas.width / cellSize);
      rows = Math.ceil(canvas.height / cellSize);
      
      // Crea una matriz 2D con una densidad baja de células iniciales (15%).
      grid = Array(columns).fill(null).map(() => Array(rows).fill(null).map(() => Math.random() > 0.85));
      cellColors = Array(columns).fill(null).map(() => Array(rows).fill(null));
      
      draw();
    }
    
    // Calcula el siguiente estado (generación) del juego.
    function update() {
      const nextGrid = Array(columns).fill(null).map(() => Array(rows).fill(false));
      const nextColors = Array(columns).fill(null).map(() => Array(rows).fill(null));
      
      for (let x = 0; x < columns; x++) {
        for (let y = 0; y < rows; y++) {
          const state = grid[x][y];
          let neighbors = 0;

          // Cuenta los vecinos vivos de cada célula.
          for (let i = -1; i <= 1; i++) {
            for (let j = -1; j <= 1; j++) {
              if (i === 0 && j === 0) continue;
              // El operador de módulo (%) permite que el mundo sea toroidal (se conecta por los bordes).
              const xi = (x + i + columns) % columns;
              const yj = (y + j + rows) % rows;
              if (grid[xi][yj]) neighbors++;
            }
          }
          
          // Aplica las reglas del Juego de la Vida.
          if (state && (neighbors < 2 || neighbors > 3)) {
            nextGrid[x][y] = false; // Muerte por soledad o sobrepoblación.
          } else if (!state && neighbors === 3) {
            nextGrid[x][y] = true;  // Nacimiento.
          } else {
            nextGrid[x][y] = state; // Supervivencia.
            if (state) {
              nextColors[x][y] = cellColors[x][y]; // Mantiene su color si sobrevive.
            }
          }
          
          // Lógica original de asignación de color, sin alteraciones.
          // Para células vivas, se evalúa una probabilidad anidada.
          if (nextGrid[x][y] && Math.random() < 0.03) {
            // Si la primera probabilidad (3%) se cumple, se evalúa una segunda (8%).
            if (Math.random() < 0.08) {
              const colorIndex = Math.floor(Math.random() * specialColors.length);
              nextColors[x][y] = specialColors[colorIndex];
            } else {
              // Si la segunda probabilidad no se cumple, la célula pierde su color.
              nextColors[x][y] = null;
            }
          }
        }
      }
      
      grid = nextGrid;
      cellColors = nextColors;
    }
    
    // Dibuja la matriz actual en el canvas.
    function draw() {
      ctx.fillStyle = '#f0eee6'; // Color de fondo.
      ctx.fillRect(0, 0, canvas.width, canvas.height);
      
      for (let x = 0; x < columns; x++) {
        for (let y = 0; y < rows; y++) {
          if (grid[x][y]) {
            // Usa color especial si existe, de lo contrario, el color por defecto.
            ctx.fillStyle = cellColors[x][y] || '#D4D2C8';
            // Dibuja rectángulos redondeados para una apariencia más suave.
            ctx.beginPath();
            ctx.roundRect(x * cellSize, y * cellSize, cellSize - 1, cellSize - 1, 2);
            ctx.fill();
          }
        }
      }
    }
    
    // Bucle principal que actualiza y dibuja el juego a intervalos definidos.
    function gameLoop() {
      update();
      draw();
      setTimeout(gameLoop, speed);
    }
    
    // --- Inicialización ---
    window.addEventListener('resize', resizeCanvas);
    resizeCanvas(); // Primera ejecución al cargar la página.
    gameLoop();
  });
</script>